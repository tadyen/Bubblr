alter table "public"."asdf" drop constraint "asdf_pkey";

drop index if exists "public"."asdf_pkey";

drop table "public"."asdf";

create table "public"."bubbles" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid,
    "name" character varying,
    "size" double precision,
    "importance" bigint
);


alter table "public"."bubbles" enable row level security;

CREATE UNIQUE INDEX bubbles_pkey ON public.bubbles USING btree (id);

alter table "public"."bubbles" add constraint "bubbles_pkey" PRIMARY KEY using index "bubbles_pkey";

create policy "Enable delete for users based on user_id"
on "public"."bubbles"
as permissive
for delete
to public
using ((auth.uid() = user_id));


create policy "Enable insert for authenticated users only"
on "public"."bubbles"
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access users based on user_id"
on "public"."bubbles"
as permissive
for select
to public
using ((auth.uid() = user_id));


create policy "Enable update for users based on user_id"
on "public"."bubbles"
as permissive
for update
to public
using ((auth.uid() = user_id));



